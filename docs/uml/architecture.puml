@startuml

'skinparam linetype ortho
skinparam linetype polyline

skinparam package {
    backgroundColor lightgrey
}

package mtRooms {
    frame "Presentation Layer" #lightblue {
        package "ui" {
            component FrontDeskView #white {
                IFrontDeskController -- [FrontDeskController]
                IReservationView -- [ReservationView]
                IPaymentView -- [PaymentView]

                FrontDeskController --( IReservationView
                FrontDeskController --( IPaymentView
            }

            component AdminView #white {
                IAdminViewController -- [AdminViewController]
                IUserAccountView -- [UserAccountView]
                ICustomerAccountView -- [CustomerAccountView]

                AdminViewController --( IUserAccountView
                AdminViewController --( ICustomerAccountView
            }

            component LogisticsView #white {
                ILogisticsViewController -- [LogisticsViewController]
                ILogisticsReportView -- [LogisticsReportView]

                LogisticsViewController --( ILogisticsReportView
            }

            component RevenueView #white {
                IRevenueViewController -- [RevenueViewController]
                IInvoiceView -- [InvoiceView]
                IRevenueReportView -- [RevenueReportView]

                RevenueViewController --( IInvoiceView
                RevenueViewController --( IRevenueReportView
            }
        }
    }

    frame "Service Layer" #lightgreen {
        package "uaa" {
            IAuthenticator -- [Authenticator]
            IFrontDeskDelegate -- [FrontDeskDelegate]
            IAuthenticatedFrontDesk -- [AuthenticatedFrontDesk]
            IAdminDelegate -- [AdminDelegate]
            IAuthenticatedAdmin -- [AuthenticatedAdmin]
            IRevenuePersonnelDelegate -- [RevenuePersonnelDelegate]
            IAuthenticatedRevenuePersonnel -- [AuthenticatedRevenuePersonnel]
            ILogisticsPersonnelDelegate -- [LogisticsPersonnelDelegate]
            IAuthenticatedLogisticsPersonnel -- [AuthenticatedLogisticsPersonnel]

            AuthenticatedFrontDesk --( IAuthenticator
            AuthenticatedFrontDesk --( IFrontDeskDelegate
            AuthenticatedAdmin --( IAuthenticator
            AuthenticatedAdmin --( IAdminDelegate
            AuthenticatedLogisticsPersonnel --( IAuthenticator
            AuthenticatedLogisticsPersonnel --( ILogisticsPersonnelDelegate
            AuthenticatedRevenuePersonnel --( IAuthenticator
            AuthenticatedRevenuePersonnel --( IRevenuePersonnelDelegate
        }
    }

    frame "Business Logic Layer" #orange {
        package "reservation" {
            component ReservationSystem #white {
                IReservationSession -- [ReservationSession]
                IReservationPayment -- [ReservationSession]
                IOptimisedSearch -- [OptimisedSearch]
                IReservation -- [Reservation]
                IPaymentProcessing -- [PaymentProcessing]
                ICustomerAccountAccess -- [CustomerAccountAccess]

                ReservationSession --( IOptimisedSearch
                ReservationSession --( IPaymentProcessing
                ReservationSession --( IReservation
                ReservationSession --( ICustomerAccountAccess
            }
        }

        package "revenue" {
            component RevenueSystem #white {
                IRevenueReporter -- [ReportCreator]
                IRevenueAggregator -- [RevenueAggregator]
                IReportPrinter -- [ReportPrinter]

                ReportCreator --( IRevenueAggregator
                ReportCreator --( IReportPrinter
            }

            component InvoiceSystem #white {
                IInvoiceAggregator -- [InvoiceAggregator]
                IMailer -- [Mailer]
                IInvoice -- [InvoiceCreator]

                InvoiceCreator --( IInvoiceAggregator
                InvoiceCreator --( IMailer
            }
        }

        package "operation" {
            component LogisticsSystem #white {
                ILogisticReportGenerator -- [LogisticReportGenerator]
            }
        }

        package "admin" {
            component AdministrationSystem #white {
                IAdminSession -- [AdminSession]
                IUserAccAdministration -- [UserAccAdministration]
                IReservationDbMaintenance -- [ReservationDbMaintenance]

                AdminSession --( IUserAccAdministration
                AdminSession --( IReservationDbMaintenance
            }

            component AuthenticationSystem #white {
                IAuthenticationSystem -- [UserAccountChecker]
            }
        }
    }

    frame "Data Layer" #purple {
        package "db" {
            component ReservationDbAccessSystem #white {
                database ReservationDB
                database UserAccDB

                IUserAccDB -- UserAccDB
                IReservationDB -- [ReservationDB]
                ITimeZoneTranslation -- [TimeZoneTranslation]
                IReservationDbAccess -- [ReservationDbAccess]
                IUserAccDbAccess -- [UserAccDbAccess]

                ReservationDbAccess --( ITimeZoneTranslation
                ReservationDbAccess --( IReservationDB
                UserAccDbAccess --( IUserAccDB
            }
        }
    }

    '##-------------------------------##
    '## Presentation to Service Layer ##
    '##-------------------------------##
    ReservationView --( IAuthenticatedFrontDesk
    PaymentView --( IAuthenticatedFrontDesk

    UserAccountView --( IAuthenticatedAdmin
    CustomerAccountView --( IAuthenticatedAdmin

    LogisticsReportView --( IAuthenticatedLogisticsPersonnel

    InvoiceView --( IAuthenticatedRevenuePersonnel
    RevenueReportView --( IAuthenticatedRevenuePersonnel

    '##---------------------------------##
    '## Service to Business Logic Layer ##
    '##---------------------------------##
    AdminDelegate --( IAdminSession

    Authenticator --( IAuthenticationSystem

    FrontDeskDelegate --( IReservationSession
    FrontDeskDelegate --( IReservationPayment

    RevenuePersonnelDelegate --( IRevenueReporter
    RevenuePersonnelDelegate --( IInvoice

    LogisticsPersonnelDelegate --( ILogisticReportGenerator

    '##------------------------------##
    '## Business Logic to Data Layer ##
    '##------------------------------##
    UserAccountChecker --( IUserAccDbAccess

    UserAccAdministration --( IUserAccDbAccess
    ReservationDbMaintenance --( IReservationDbAccess

    CustomerAccountAccess --( IReservationDbAccess
    Reservation --( IReservationDbAccess

    PaymentProcessing --( IReservationDbAccess
    LogisticReportGenerator --( IReservationDbAccess
    InvoiceAggregator --( IReservationDbAccess
    RevenueAggregator --( IReservationDbAccess
}

@enduml